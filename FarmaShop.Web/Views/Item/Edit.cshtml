@using FarmaShop.Web.Extensions
@using System.Net.Http
@model FarmaShop.Web.Models.Item.ItemUpdateModel

<h2>New</h2>
@using (Html.BeginForm(actionName: "Update", controllerName: "Item", method: FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.HttpMethodOverride(HttpMethod.Put)
    
    
    @Html.HiddenFor(b => b.Id)
    
    
    @Html.Label("Name", "Numele produsului")
    <br />
    @Html.TextBoxFor(c => c.Name, null, new { placeholder = "Introduceti numele produsului", @class = "formcontrol" })
    @Html.ValidationMessageFor(c => c.Name, "", new { @class = "text-danger" })
    <br /><br />
    
    
    @Html.Label("ShortDescription", "Descrierea scurta a produsului (Cea afisata in meniul de cautare)")
    <br />
    @Html.TextBoxFor(b => b.ShortDescription, null, new { placeholder = "Introduceti descrierea scurta a produsului", @class = "formcontrol" })
    @Html.ValidationMessageFor(b => b.ShortDescription, "", new { @class = "text-danger" })
    <br /><br />
    
    
    @Html.Label("LongDescription", "Descrierea lunga a produsului (Cea afisata in detaliile produsului din pagina specifica)")
    <br />
    @Html.TextBoxFor(b => b.LongDescription, null, new { placeholder = "Introduceti descrierea lunga a produsului", @class = "formcontrol" })
    @Html.ValidationMessageFor(b => b.LongDescription, "", new { @class = "text-danger" })
    <br /><br />
    
    
    @Html.Label("Price", "Pretul produsului in LEI")
    <br />
    @Html.TextBoxFor(b => b.Price, null, new { placeholder = "Introduceti pretul produsului in LEI", @class = "formcontrol" })
    @Html.ValidationMessageFor(b => b.Price, "", new { @class = "text-danger" })
    <br /><br />
    
    
    @Html.Label("InStock", "Numarul de produse in stoc")
    <br />
    @Html.TextBoxFor(b => b.InStock, null, new { placeholder = "Introduceti numarul de produse in stoc", @class = "formcontrol" })
    @Html.ValidationMessageFor(b => b.InStock, "", new { @class = "text-danger" })
    <br /><br />
          
          
    @Html.LabelFor(b => b.Categories, "Alegeti categoriile din care produsul va face parte: ")
    <br />
    for (var i = 0; i < Model.Categories.Count; i++)
    {
        @Html.HiddenFor(b => b.Categories[i].Id)
        @Html.HiddenFor(b => b.Categories[i].Name)
        @Html.CheckBoxFor(b => b.Categories[i].Checked)
        @Html.DisplayFor(b => b.Categories[i].Name)
        <br />
    }
    @Html.ValidationMessageFor(b => b.Categories, "", new { @class = "text-danger" })
    <br /><br />
          
          
    <p>TODO: Lista de ales mai multe categorii pentru produs</p>
    @*@Html.Label("CategoriesIds", "Pretul produsului in LEI")
    <br />
    @Html.TextBoxFor(b => b.CategoriesIds, null, new { placeholder = "Introduceti pretul produsului in LEI", @class = "formcontrol" })
    @Html.ValidationMessageFor(b => b.InStock, "", new { @class = "text-danger" })
    <br />*@
                                                      
                                                      
    @Html.Label("Image", "Imagine")
    <br />
    
    // Old image
    @Html.HiddenFor(b => b.OldImageUrl)
    <div>
        <p>Imaginea veche: </p>
        @{
            var image = Url.Content("~/favicon.ico");
            if (Model.OldImageUrl != null)
            {
                image = Model.OldImageUrl;
            }
        }
        <img src="@image" alt="Old image">
    </div>
    //
    
    <input asp-for="NewImage" accept="image/*" />
    @Html.ValidationMessageFor(b => b.NewImage, "", new { @class = "text-danger" })
    <br /><br />
    
    
    <button class="btn btn-primary" type="submit">Update</button>
}